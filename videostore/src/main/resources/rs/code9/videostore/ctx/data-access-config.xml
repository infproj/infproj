<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	 <context:property-placeholder location="classpath:rs/code9/videostore/cfg/jdbc.properties"/> 
	
	<!-- 
		DataSource defines connection properties in a standard JDBC manner.
		Do NOT use DriverManagerDataSource in a production environments, since
		it is not supporting pooling. 
		Use one of the following:
			- tomcat-jdbc
			- C3P0
			- Commons DBCP		
	 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driver}"
		p:url="${jdbc.url}"
		p:username="${jdbc.username}"
		p:password="${jdbc.password}"
	/>
	
	<!-- 
		LocalContainerEntityManagerFactoryBean is used to obtain EntityManagerFactory. This is one of the 3 ways
		to do it via Spring JPA support. The other two ways are:
			- LocalEntityManagerFactoryBean (not for production environments)
			- JNDI
	 -->
	 <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	 	<property name="dataSource" ref="dataSource" />
	 	<property name="packagesToScan" value="rs.code9.videostore.model" />
	 	<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
	 </bean>
	 
	 <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" /> 
	 
	 <jpa:repositories base-package="rs.code9.videostore.repository" /> 
</beans>
